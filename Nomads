import requests, json
# $(".item-title").each( function(x){ console.log( '"'+$( this ).text()+'": '+$( this ).parent().attr("href").split("/")[2]+',' ) })
nomad_rare={
    "ST-M23 Defender ": 74,
    "MM5-4 Vector ": 7,
    "Wyvern ": 64,
    "Engine ": 112,
    "Radar-detector ": 142,
    "Racing wheel ": 383,
    "Racing wheel ST ": 379,
    "Landing gear ST ": 389,
    "Landing gear ": 395,
    "Attack drone ": 94,
    "Hazardous generator ": 52,
    "Chameleon ": 100,
}
nomad_epic={
    "Spectre-2 ": 40,
    "AC72 Whirlwind ": 32,
    "Missile drone ": 79,
    "V8 Engine ": 71,
    "Powerful radar-detector ": 122,
    "Charged radiator ": 86,
    "MG13 Equalizer ": 31,
    "Chameleon Mk2 ": 82,
    "Hardened track ": 63,
}
nomad_legendary={
    "Retcher ": 55,
    "Reaper ": 33,
}
def fetch_price( item ):
    id=str(item);
    
    headers= {"User-Agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.82 Safari/537.36"}
    r = requests.get("https://crossoutdb.com/data/recipe/"+str(item), headers=headers)
    
    if( r.status_code != 200 ):
        print( "Error fetching "+item);
        return 1;
    
    j = r.json() 

    sell_price = float( j['Item']['FormatSellPrice'] )
    sell_price_adjusted = sell_price - (sell_price * .1)
    cost = float( j['Recipe']['Recipe']['SumSellFormat'] )
    profit = round(  sell_price_adjusted - cost, 2)
    instant_profit=profit-5

    return {"cost":cost,
        "sell_price": sell_price,
        "sell_price_adjusted": sell_price_adjusted,
        "profit":profit,
        "instant_profit":instant_profit
    }

def find_profits( item_list, list_name ):

    print(list_name)
    for item, id  in item_list.items():
        price = fetch_price( id )
        if( price['profit'] > 0 ):
            #print( "    '", item, "'        cost:",price['cost'],"  profit:",price['profit'] );
            print("    %22s    cost:%4.2f  profit:%4.2f profit_cost_ratio:%4.2f" % (item, price['cost'], price['profit'],  (price['profit']/price['cost']) ) )
            
find_profits(nomad_rare, "Nomad Rares")
find_profits(nomad_epic, "Nomad Epics")
find_profits(nomad_legendary, "Nomad Legendarys")
